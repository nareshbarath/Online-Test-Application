{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/question-service.service\";\nclass QuestionsComponent {\n  constructor(questionService) {\n    this.questionService = questionService;\n    this.name = '';\n    this.questionList = [];\n    this.currentQuestion = 0;\n    this.points = 0;\n    this.counter = 60;\n    this.correctAnswer = 0;\n    this.inCorrectAnswer = 0;\n    this.progress = '0';\n    this.isQuizCompleted = false;\n  }\n  ngOnInit() {\n    this.name = localStorage.getItem('name');\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestions().subscribe(res => {\n      console.log({\n        \"questions\": res.questions\n      });\n      this.questionList = res.questions;\n    });\n  }\n  startCounter() {\n    this.interval$ = interval(1000).subscribe(val => {\n      this.counter--;\n      if (this.counter === 0) {\n        this.currentQuestion++;\n        this.counter = 60;\n        this.points -= 10;\n      }\n    });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n}\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n  return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.QuestionServiceService));\n};\nQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionsComponent,\n  selectors: [[\"app-questions\"]],\n  decls: 2,\n  vars: 0,\n  template: function QuestionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"questions works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuestionsComponent };","map":{"version":3,"names":["interval","QuestionsComponent","constructor","questionService","name","questionList","currentQuestion","points","counter","correctAnswer","inCorrectAnswer","progress","isQuizCompleted","ngOnInit","localStorage","getItem","getAllQuestions","startCounter","getQuestions","subscribe","res","console","log","questions","interval$","val","setTimeout","unsubscribe","i0","ɵɵdirectiveInject","i1","QuestionServiceService","selectors","decls","vars","template","QuestionsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\fronetend\\Angular\\online-test-application\\src\\app\\components\\questions\\questions.component.ts","D:\\fronetend\\Angular\\online-test-application\\src\\app\\components\\questions\\questions.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { QuestionServiceService } from '../../service/question-service.service';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css'],\n})\nexport class QuestionsComponent implements OnInit {\n  public name: string = '';\n  public questionList: any = [];\n  public currentQuestion: number = 0;\n  public points: number = 0;\n  counter = 60;\n  correctAnswer: number = 0;\n  inCorrectAnswer: number = 0;\n  interval$: any;\n  progress: string = '0';\n  isQuizCompleted: boolean = false;\n\n  constructor(private questionService: QuestionServiceService) {}\n\n  ngOnInit(): void {\n    this.name = localStorage.getItem('name')!;\n    this.getAllQuestions();\n    this.startCounter();\n  }\n\n  getAllQuestions() {\n    this.questionService.getQuestions().subscribe((res) => {\n      console.log({\"questions\":res.questions});\n      \n      this.questionList = res.questions;\n    });\n  }\n\n  startCounter() {\n    this.interval$ = interval(1000).subscribe((val) => {\n      this.counter--;\n      if (this.counter === 0) {\n        this.currentQuestion++;\n        this.counter = 60;\n        this.points -= 10;\n      }\n    });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n}\n","<p>questions works!</p>\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,MAAM;;;AAE/B,MAKaC,kBAAkB;EAY7BC,YAAoBC,eAAuC;IAAvC,KAAAA,eAAe,GAAfA,eAAe;IAX5B,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,eAAe,GAAW,CAAC;IAC3B,KAAAC,MAAM,GAAW,CAAC;IACzB,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,aAAa,GAAW,CAAC;IACzB,KAAAC,eAAe,GAAW,CAAC;IAE3B,KAAAC,QAAQ,GAAW,GAAG;IACtB,KAAAC,eAAe,GAAY,KAAK;EAE8B;EAE9DC,QAAQA,CAAA;IACN,IAAI,CAACT,IAAI,GAAGU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE;IACzC,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAD,eAAeA,CAAA;IACb,IAAI,CAACb,eAAe,CAACe,YAAY,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MACpDC,OAAO,CAACC,GAAG,CAAC;QAAC,WAAW,EAACF,GAAG,CAACG;MAAS,CAAC,CAAC;MAExC,IAAI,CAAClB,YAAY,GAAGe,GAAG,CAACG,SAAS;IACnC,CAAC,CAAC;EACJ;EAEAN,YAAYA,CAAA;IACV,IAAI,CAACO,SAAS,GAAGxB,QAAQ,CAAC,IAAI,CAAC,CAACmB,SAAS,CAAEM,GAAG,IAAI;MAChD,IAAI,CAACjB,OAAO,EAAE;MACd,IAAI,IAAI,CAACA,OAAO,KAAK,CAAC,EAAE;QACtB,IAAI,CAACF,eAAe,EAAE;QACtB,IAAI,CAACE,OAAO,GAAG,EAAE;QACjB,IAAI,CAACD,MAAM,IAAI,EAAE;;IAErB,CAAC,CAAC;IACFmB,UAAU,CAAC,MAAK;MACd,IAAI,CAACF,SAAS,CAACG,WAAW,EAAE;IAC9B,CAAC,EAAE,MAAM,CAAC;EACZ;;AAxCW1B,kBAAkB,C;mBAAlBA,kBAAkB,EAAA2B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,sBAAA;AAAA;AAAlB9B,kBAAkB,C;QAAlBA,kBAAkB;EAAA+B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,uBAAgB;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDSVxC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}