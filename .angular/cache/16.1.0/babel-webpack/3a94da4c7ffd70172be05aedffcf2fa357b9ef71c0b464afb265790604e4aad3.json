{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/question-service.service\";\nclass QuestionsComponent {\n  constructor(questionService) {\n    this.questionService = questionService;\n    this.name = '';\n    this.questionList = [];\n    this.currentQuestion = 0;\n    this.points = 0;\n    this.counter = 60;\n    this.correctAnswer = 0;\n    this.inCorrectAnswer = 0;\n    this.progress = '0';\n    this.isQuizCompleted = false;\n  }\n  ngOnInit() {\n    this.name = localStorage.getItem('name');\n    this.getAllQuestions();\n    this.startCounter();\n  }\n  getAllQuestions() {\n    this.questionService.getQuestions().subscribe(res => {\n      this.questionList = res.questions;\n    });\n  }\n  startCounter() {\n    this.interval$ = interval(1000).subscribe(val => {\n      this.counter--;\n      if (this.counter === 0) {\n        this.currentQuestion++;\n        this.counter = 60;\n        this.points -= 10;\n      }\n    });\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n  nextQuestion() {\n    this.currentQuestion++;\n  }\n  previousQuestion() {\n    this.currentQuestion--;\n  }\n  answer(currentQno, option) {\n    if (currentQno === this.questionList.length) {\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    if (option.correct) {\n      this.points += 10;\n      this.correctAnswer++;\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.inCorrectAnswer++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n      this.points -= 10;\n    }\n  }\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = '0';\n  }\n  getProgressPercent() {\n    this.progress = (this.currentQuestion / this.questionList.length * 100).toString();\n    return this.progress;\n  }\n}\nQuestionsComponent.ɵfac = function QuestionsComponent_Factory(t) {\n  return new (t || QuestionsComponent)(i0.ɵɵdirectiveInject(i1.QuestionServiceService));\n};\nQuestionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionsComponent,\n  selectors: [[\"app-questions\"]],\n  decls: 2,\n  vars: 0,\n  template: function QuestionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"questions works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { QuestionsComponent };","map":{"version":3,"names":["interval","QuestionsComponent","constructor","questionService","name","questionList","currentQuestion","points","counter","correctAnswer","inCorrectAnswer","progress","isQuizCompleted","ngOnInit","localStorage","getItem","getAllQuestions","startCounter","getQuestions","subscribe","res","questions","interval$","val","setTimeout","unsubscribe","nextQuestion","previousQuestion","answer","currentQno","option","length","stopCounter","correct","resetCounter","getProgressPercent","resetQuiz","toString","i0","ɵɵdirectiveInject","i1","QuestionServiceService","selectors","decls","vars","template","QuestionsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\fronetend\\Angular\\online-test-application\\src\\app\\components\\questions\\questions.component.ts","D:\\fronetend\\Angular\\online-test-application\\src\\app\\components\\questions\\questions.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { QuestionServiceService } from '../../service/question-service.service';\nimport { interval } from 'rxjs';\n\n@Component({\n  selector: 'app-questions',\n  templateUrl: './questions.component.html',\n  styleUrls: ['./questions.component.css'],\n})\nexport class QuestionsComponent implements OnInit {\n  public name: string = '';\n  public questionList: any = [];\n  public currentQuestion: number = 0;\n  public points: number = 0;\n  counter = 60;\n  correctAnswer: number = 0;\n  inCorrectAnswer: number = 0;\n  interval$: any;\n  progress: string = '0';\n  isQuizCompleted: boolean = false;\n\n  constructor(private questionService: QuestionServiceService) {}\n\n  ngOnInit(): void {\n    this.name = localStorage.getItem('name')!;\n    this.getAllQuestions();\n    this.startCounter();\n  }\n\n  getAllQuestions() {\n    this.questionService.getQuestions().subscribe((res) => {\n      this.questionList = res.questions;\n    });\n  }\n\n  startCounter() {\n    this.interval$ = interval(1000).subscribe((val) => {\n      this.counter--;\n      if (this.counter === 0) {\n        this.currentQuestion++;\n        this.counter = 60;\n        this.points -= 10;\n      }\n    });\n\n    setTimeout(() => {\n      this.interval$.unsubscribe();\n    }, 600000);\n  }\n\n  nextQuestion() {\n    this.currentQuestion++;\n  }\n  previousQuestion() {\n    this.currentQuestion--;\n  }\n\n  answer(currentQno: number, option: any) {\n    if (currentQno === this.questionList.length) {\n      this.isQuizCompleted = true;\n      this.stopCounter();\n    }\n    if (option.correct) {\n      this.points += 10;\n      this.correctAnswer++;\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n    } else {\n      setTimeout(() => {\n        this.currentQuestion++;\n        this.inCorrectAnswer++;\n        this.resetCounter();\n        this.getProgressPercent();\n      }, 1000);\n\n      this.points -= 10;\n    }\n  }\n\n  stopCounter() {\n    this.interval$.unsubscribe();\n    this.counter = 0;\n  }\n  resetCounter() {\n    this.stopCounter();\n    this.counter = 60;\n    this.startCounter();\n  }\n  resetQuiz() {\n    this.resetCounter();\n    this.getAllQuestions();\n    this.points = 0;\n    this.counter = 60;\n    this.currentQuestion = 0;\n    this.progress = '0';\n  }\n  getProgressPercent() {\n    this.progress = (\n      (this.currentQuestion / this.questionList.length) *\n      100\n    ).toString();\n    return this.progress;\n  }\n}\n","<p>questions works!</p>\n"],"mappings":"AAEA,SAASA,QAAQ,QAAQ,MAAM;;;AAE/B,MAKaC,kBAAkB;EAY7BC,YAAoBC,eAAuC;IAAvC,KAAAA,eAAe,GAAfA,eAAe;IAX5B,KAAAC,IAAI,GAAW,EAAE;IACjB,KAAAC,YAAY,GAAQ,EAAE;IACtB,KAAAC,eAAe,GAAW,CAAC;IAC3B,KAAAC,MAAM,GAAW,CAAC;IACzB,KAAAC,OAAO,GAAG,EAAE;IACZ,KAAAC,aAAa,GAAW,CAAC;IACzB,KAAAC,eAAe,GAAW,CAAC;IAE3B,KAAAC,QAAQ,GAAW,GAAG;IACtB,KAAAC,eAAe,GAAY,KAAK;EAE8B;EAE9DC,QAAQA,CAAA;IACN,IAAI,CAACT,IAAI,GAAGU,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE;IACzC,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAD,eAAeA,CAAA;IACb,IAAI,CAACb,eAAe,CAACe,YAAY,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAI;MACpD,IAAI,CAACf,YAAY,GAAGe,GAAG,CAACC,SAAS;IACnC,CAAC,CAAC;EACJ;EAEAJ,YAAYA,CAAA;IACV,IAAI,CAACK,SAAS,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAACmB,SAAS,CAAEI,GAAG,IAAI;MAChD,IAAI,CAACf,OAAO,EAAE;MACd,IAAI,IAAI,CAACA,OAAO,KAAK,CAAC,EAAE;QACtB,IAAI,CAACF,eAAe,EAAE;QACtB,IAAI,CAACE,OAAO,GAAG,EAAE;QACjB,IAAI,CAACD,MAAM,IAAI,EAAE;;IAErB,CAAC,CAAC;IAEFiB,UAAU,CAAC,MAAK;MACd,IAAI,CAACF,SAAS,CAACG,WAAW,EAAE;IAC9B,CAAC,EAAE,MAAM,CAAC;EACZ;EAEAC,YAAYA,CAAA;IACV,IAAI,CAACpB,eAAe,EAAE;EACxB;EACAqB,gBAAgBA,CAAA;IACd,IAAI,CAACrB,eAAe,EAAE;EACxB;EAEAsB,MAAMA,CAACC,UAAkB,EAAEC,MAAW;IACpC,IAAID,UAAU,KAAK,IAAI,CAACxB,YAAY,CAAC0B,MAAM,EAAE;MAC3C,IAAI,CAACnB,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACoB,WAAW,EAAE;;IAEpB,IAAIF,MAAM,CAACG,OAAO,EAAE;MAClB,IAAI,CAAC1B,MAAM,IAAI,EAAE;MACjB,IAAI,CAACE,aAAa,EAAE;MACpBe,UAAU,CAAC,MAAK;QACd,IAAI,CAAClB,eAAe,EAAE;QACtB,IAAI,CAAC4B,YAAY,EAAE;QACnB,IAAI,CAACC,kBAAkB,EAAE;MAC3B,CAAC,EAAE,IAAI,CAAC;KACT,MAAM;MACLX,UAAU,CAAC,MAAK;QACd,IAAI,CAAClB,eAAe,EAAE;QACtB,IAAI,CAACI,eAAe,EAAE;QACtB,IAAI,CAACwB,YAAY,EAAE;QACnB,IAAI,CAACC,kBAAkB,EAAE;MAC3B,CAAC,EAAE,IAAI,CAAC;MAER,IAAI,CAAC5B,MAAM,IAAI,EAAE;;EAErB;EAEAyB,WAAWA,CAAA;IACT,IAAI,CAACV,SAAS,CAACG,WAAW,EAAE;IAC5B,IAAI,CAACjB,OAAO,GAAG,CAAC;EAClB;EACA0B,YAAYA,CAAA;IACV,IAAI,CAACF,WAAW,EAAE;IAClB,IAAI,CAACxB,OAAO,GAAG,EAAE;IACjB,IAAI,CAACS,YAAY,EAAE;EACrB;EACAmB,SAASA,CAAA;IACP,IAAI,CAACF,YAAY,EAAE;IACnB,IAAI,CAAClB,eAAe,EAAE;IACtB,IAAI,CAACT,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACF,eAAe,GAAG,CAAC;IACxB,IAAI,CAACK,QAAQ,GAAG,GAAG;EACrB;EACAwB,kBAAkBA,CAAA;IAChB,IAAI,CAACxB,QAAQ,GAAG,CACb,IAAI,CAACL,eAAe,GAAG,IAAI,CAACD,YAAY,CAAC0B,MAAM,GAChD,GAAG,EACHM,QAAQ,EAAE;IACZ,OAAO,IAAI,CAAC1B,QAAQ;EACtB;;AAhGWV,kBAAkB,C;mBAAlBA,kBAAkB,EAAAqC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,sBAAA;AAAA;AAAlBxC,kBAAkB,C;QAAlBA,kBAAkB;EAAAyC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCT/BT,EAAA,CAAAW,cAAA,QAAG;MAAAX,EAAA,CAAAY,MAAA,uBAAgB;MAAAZ,EAAA,CAAAa,YAAA,EAAI;;;;;SDSVlD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}